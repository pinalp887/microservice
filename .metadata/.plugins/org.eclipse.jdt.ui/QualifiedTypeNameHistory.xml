<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.example.demo.bean.LimitConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="com.example.demo.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
<fullyQualifiedTypeName name="com.cignex.model.ExchageValue"/>
<fullyQualifiedTypeName name="com.cignex.bean.CurrencyConversionBean"/>
<fullyQualifiedTypeName name="com.book.NemoReefTourMenu"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="javax.swing.text.AbstractDocument.BranchElement"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="java.lang.NullPointerException"/>
<fullyQualifiedTypeName name="com.book.Booking"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Transient"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="java.lang.Long"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="com.cignex.repository.ExchangeValueRepository"/>
<fullyQualifiedTypeName name="com.netflix.discovery.converters.Auto"/>
<fullyQualifiedTypeName name="com.cignex.model.ExchangeValue"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.cignex.proxyservice.CurrencyExchangeServiceProxy"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.cignex.model.CurrencyConversionbean"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
<fullyQualifiedTypeName name="com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
<fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="brave.sampler.Sampler"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
</qualifiedTypeNameHistroy>
